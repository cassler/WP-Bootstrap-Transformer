<?php
 /* 
 Plugin Name: WP Bootstrap Transformer
 Plugin URI: http://cassler.net
 Description: Filters much of the markup generated by Wordpress into Bootstrap 3 UI elements.
 Version 0.1
 Author: Darin Cassler
 Author URI: http://darin.co
 License: MIT
 */


 /** 
  * Plugin To-Dos
  *
  * @todo filter for categories widget
  * @todo filter for changing alignleft alignright to pull-left and pull-right
  * @todo default the bootstrap walker
  * @todo cleanup walker to work with Bootstrap 3
  * @todo use bootstrap thumbnails for inserted images and galleries
  * @todo use btn-group for paginaion by numbers
  * @todo 
 **/ 


/**
 * Excerpts in Bootstrap
 *
 * @author Darin Cassler
 * @package wpbst
 * @subpackage wpbst_excerpts
**/

	function wpbst_continue_reading_link() {
			return '<p><a class="btn btn-default" href="'. get_permalink() . '">Read More <span class="glyphicon glyphicon-chevron-right"></span></a></p>';
		}

		function wpbst_auto_excerpt_more( $more ) {
			return '&hellip;</p>' . wpbst_continue_reading_link();
		}
		add_filter( 'excerpt_more', 'wpbst_auto_excerpt_more' );

		function wpbst_custom_excerpt_more( $output ) {
			if ( has_excerpt() && ! is_attachment() ) {
				$output .= wpbst_continue_reading_link();
			}
			return $output;
		}
	add_filter( 'get_the_excerpt', 'wpbst_custom_excerpt_more' );

/**
 * Bootstrap Markup Navs
 *
 * Custom walker to match standard Bootstrap menu markup
 *
 * @author Darin Cassler
 * @package den_framework
 * @subpackage den_theme_config
**/

	class wpbst_menu_walker extends Walker_Nav_Menu
	{
		function start_lvl(&$output, $depth) {
			// update the <li> element
			$bookmark = 'den-menu-top';
			$li_pos = strrpos ( $output, $bookmark );
			$output = substr($output, 0, $li_pos+strlen($bookmark)) . " dropdown" . substr($output, $li_pos+strlen($bookmark), strlen($output) - $li_pos);
			
			// update the <a> element
			$bookmark = "<a ";
			$anchor_pos = strrpos ( $output, $bookmark );

			$output = substr($output, 0, $anchor_pos+strlen($bookmark)) . substr($output, $anchor_pos+strlen($bookmark), strlen($output) - $anchor_pos);
			
			$output .= "<span class=\"disclosure-down\"></span><ul class=\"dropdown-menu depth-". $depth ."\">";
		}
		function end_lvl(&$output, $depth) {
			$output .= "</ul>";
		}
		
	    function start_el(&$output, $item, $depth, $args)
	    {
	           global $wp_query;
	           $indent = ( $depth ) ? str_repeat( "\t", $depth ) : '';

	           $class_names = $value = '';

	           $classes = empty( $item->classes ) ? array() : (array) $item->classes;

			   $page_info = get_page($item->object_id); // get the page slug

			   $page_slug = $page_info->post_name;

	           $class_names = join( ' ', apply_filters( 'nav_menu_css_class', array_filter( $classes ), $item ) );

				
				if ( $item->menu_item_parent == 0  ? $parent_item = ' den-menu-top' : $parent_item = '' );
				
	           $class_names = ' class="'. esc_attr( $class_names ) . ' nb-' . $page_slug . $parent_item . '"';
				
	           $output .= $indent . '<li id="menu-item-'. $item->ID . '"' . $value . $class_names .'>';

	           $attributes  = ! empty( $item->attr_title ) ? ' title="'  . esc_attr( $item->attr_title ) .'"' : '';
	           $attributes .= ! empty( $item->target )     ? ' target="' . esc_attr( $item->target     ) .'"' : '';
	           $attributes .= ! empty( $item->xfn )        ? ' rel="'    . esc_attr( $item->xfn        ) .'"' : '';
	           $attributes .= ! empty( $item->url )        ? ' href="'   . esc_attr( $item->url        ) .'"' : '';
				
			   $prepend = '';
	           $append = '';
	           $description  = ! empty( $item->description ) ? ' <span>'.esc_attr( $item->description ).'</span>' : '';

	           if($depth != 0)
	           {
					$description = $append = $prepend = "";
	           }
				
	            $item_output = $args->before;
	            $item_output .= '<a'. $attributes .'>';
	            $item_output .= $args->link_before .$prepend.apply_filters( 'the_title', $item->title, $item->ID ).$append;
	            $item_output .= $description.$args->link_after;
	            $item_output .= '</a>';
	            $item_output .= $args->after;

	            $output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );
			}
	}

/**
 * Filter widgets to be more bootstrapy
 *
 * @author Darin Cassler
 * @package wpbst
 * @subpackage wpbst_widgets
**/

	function add_slug_css_list_categories($list) {

	$cats = get_categories();
		foreach($cats as $cat) {
			$find = 'cat-item-' . $cat->term_id . '"';
			$replace = 'list-group-item category-' . $cat->slug . '"';
			$list = str_replace( $find, $replace, $list );
			$find = 'cat-item-' . $cat->term_id . ' ';
			$replace = 'category-' . $cat->slug . ' ';
			$list = str_replace( $find, $replace, $list );
		}
		return $list;
	}

	add_filter('wp_list_categories', 'add_slug_css_list_categories');

	function cat_count_span($links) {
  		$links = str_replace('</a> (', '</a> <span class="badge badge-primary">', $links);
  		$links = str_replace(')', '</span>', $links);
  		return $links;
	}
	add_filter('wp_list_categories', 'cat_count_span');


function wpbst_pager() {

if($wp_query->max_num_pages > 1): ?>
<ul class="pager">
	<li class="previous"><?php previous_posts_link('&laquo; Previous Page') ?></li>
	<li class="next"><?php next_posts_link('Next Page &raquo;') ?></li>
</ul>
<?php endif; ?>

<?php if(is_single()) { ?>
<ul class="pager">
	<li class="previous"><?php previous_post('%', '&laquo; Previous Post', 'no'); ?></li>
	<li class="next"><?php next_post('%', 'Next Post &raquo;', 'no') ?></li>
</ul>
<?php }}

?>